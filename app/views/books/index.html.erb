<%# バリデーションによるエラーの内容を確認できるようにする %>
<% if @book.errors.any? %>
  <%= @book.errors.count %>件のエラーが発生しました
  <ul>
    <%# errorsはモデルにバリデーションを掛けた時に発生したエラーの内容を確認できるメソッド、any?と組み合わせることでエラーが発生しているかどうかを判定することができる %>
    <% @book.errors.full_messages.each do |message| %>
    <li><%= message %></li>
    <% end %>
  </ul>
<% end %>

<h1>Books</h1>
  <%# theadはテーブルのヘッダー行をまとめる要素 %>
  <table>
  <thead>
    <tr>
      <th>本の名前</th>
      <th>感想</th>
      <%# 操作にshow,編集,削除の三つ要素があるので3列分を指定 %>
      <th colspan="3">操作</th>
    </tr>
  </thead>
  <tbody>
    <%# 以下のbookは@booksの各要素をひとつづつ取り出したもの %>
    <%# 新規投稿のnewとは関係ない %>
    <% @books.each do |book| %>
    <%# trとはTable Rowでテーブル内の行を表す。tdタグを中に配置し、セルを作る %>
    <tr>
      <td><%= book.title %></td>
      <td><%= book.body %></td>
      <td><%= link_to "show", book_path(book) %></td>
      <td><%= link_to "編集", edit_book_path(book) %></td>
      <td><%= link_to "削除", book_path(book), method: :delete, "data-confirm" => "本当に削除しますか?" %></td>
    </tr>
    <% end %>
  </tbody>
  </table>

<h2>New book</h2>
  <%# テーブル本体部分を書いていく %>
  <%# model: @bookとすることで、送信されるパラメータはparams[:book]として渡される。 %>
    <%= form_with model: @book, url:'/books' do |f| %>
    <div>
    <%= f.label :title, "本のタイトル" %><br>
    <%# カラム名が本のタイトル %>
    <%= f.text_field :title %>
    </div>
    
    <%# ラベルで書いてみる、:のあとはカラムを入れる %>
    <div>
    <%= f.label :body, "感想" %><br>
    <%= f.text_area :body %>
    </div>
    <%= f.submit 'Create Book'%>
    <% end %>